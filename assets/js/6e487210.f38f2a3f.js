"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[4350],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,k=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9579:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:3},o="Instructions to Run the Containerized Client",l={unversionedId:"replicate/client",id:"version-1.0.0/replicate/client",title:"Instructions to Run the Containerized Client",description:"SDR Hardware Setup",source:"@site/versioned_docs/version-1.0.0/replicate/client.md",sourceDirName:"replicate",slug:"/replicate/client",permalink:"/adsb-nats/1.0.0/replicate/client",draft:!1,tags:[],version:"1.0.0",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Annotator",permalink:"/adsb-nats/1.0.0/replicate/annotator"},next:{title:"Elasticsearch & Kibana",permalink:"/adsb-nats/1.0.0/replicate/elastic"}},s={},p=[{value:"SDR Hardware Setup",id:"sdr-hardware-setup",level:2},{value:"Installing Docker on Raspberry Pi",id:"installing-docker-on-raspberry-pi",level:2},{value:"Running the Containerized Client",id:"running-the-containerized-client",level:2},{value:"Verify that it\u2019s Working",id:"verify-that-its-working",level:2},{value:"Method 1: Using the Frontend",id:"method-1-using-the-frontend",level:3},{value:"Using the Frontend Airplane Tracker Visualization",id:"using-the-frontend-airplane-tracker-visualization",level:2},{value:"Method 2: Using the System Health Dashboard",id:"method-2-using-the-system-health-dashboard",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"instructions-to-run-the-containerized-client"},"Instructions to Run the Containerized Client"),(0,i.kt)("h2",{id:"sdr-hardware-setup"},"SDR Hardware Setup"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://youtu.be/uM8NkB2nIis"},"https://youtu.be/uM8NkB2nIis")),(0,i.kt)("h2",{id:"installing-docker-on-raspberry-pi"},"Installing Docker on Raspberry Pi"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"synthesized from: ",(0,i.kt)("a",{parentName:"em",href:"https://www.simplilearn.com/tutorials/docker-tutorial/raspberry-pi-docker"},"https://www.simplilearn.com/tutorials/docker-tutorial/raspberry-pi-docker"))),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Upgrade and Update ",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"sudo apt-get update && sudo apt-get upgrade")))),(0,i.kt)("li",{parentName:"ol"},"Download and Install Docker on Rasberry Pi Environment ",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Push this installation script: ",(0,i.kt)("inlineCode",{parentName:"li"},"curl -fsSL [https://get.docker.com](https://get.docker.com/) -o [get-docker.sh](http://get-docker.sh/)")),(0,i.kt)("li",{parentName:"ol"},"Run the script: ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo sh [get-docker.sh](http://get-docker.sh/)")))),(0,i.kt)("li",{parentName:"ol"},"Add the Pi user to the Docker group",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"sudo usermod -aG docker Pi")))),(0,i.kt)("li",{parentName:"ol"},"Check Docker version and System Wide Details ",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"docker version")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"docker info"))))),(0,i.kt)("h2",{id:"running-the-containerized-client"},"Running the Containerized Client"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"clone the repo: ",(0,i.kt)("inlineCode",{parentName:"p"},"gh repo clone ml4wireless/adsb-nats"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"cd into the ",(0,i.kt)("inlineCode",{parentName:"p"},"client-rtl-docker")," folder")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"make")," in command line to build the Docker image")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Connect the SDR device")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the script ",(0,i.kt)("inlineCode",{parentName:"p"},"run-docker.sh")," "),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"for ",(0,i.kt)("inlineCode",{parentName:"li"},"NATS_TOKEN"),", insert the token (\u201dsahai\u201d) "),(0,i.kt)("li",{parentName:"ol"},"for ",(0,i.kt)("inlineCode",{parentName:"li"},"REPORTER_UID"),", insert your name or desired reporting user id for your client ",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"this will show up on the frontend to help identify which airplane data points your device has reported"))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create a screen session to use to keep the program executing in the background with ",(0,i.kt)("inlineCode",{parentName:"p"},"screen -S <session_name>")),(0,i.kt)("p",{parentName:"li"},"Use the script ",(0,i.kt)("inlineCode",{parentName:"p"},"[run-docker.sh](http://run-docker.sh)")," we created earlier to start the execution of the container:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"**"),"Note:",(0,i.kt)("strong",{parentName:"li"},"**")," If it is your first time running the script, run ",(0,i.kt)("inlineCode",{parentName:"li"},"chmod +x [run-docker.sh](http://run-docker.sh)")," to make it executable",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./run-docker.sh\n"))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Detach the Screen session ",(0,i.kt)("em",{parentName:"p"},"(keeps the program running in the background even if you exit the terminal)")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"press ",(0,i.kt)("inlineCode",{parentName:"li"},"ctrl + a + d")," to detach it -> you are now done (you may have to try doing this multiple times for it to work)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"***"),"Optional Check: To make sure the screen session was created and detached, use the command ",(0,i.kt)("inlineCode",{parentName:"li"},"screen -list"),". You should see something like this, with your session name-*","  ",(0,i.kt)("img",{alt:"Untitled",src:n(7193).Z,width:"1056",height:"204"}))))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Debugging Help \ud83d\udc1e"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"We have added a environment variable USE_RECORDED_DATA in ",(0,i.kt)("inlineCode",{parentName:"li"},"run_docker.sh")," for debugging purposes. Set it to ",(0,i.kt)("inlineCode",{parentName:"li"},"1")," in order to use pre-recorded data instead of live data.","  ",(0,i.kt)("img",{alt:"Untitled",src:n(5680).Z,width:"260",height:"151"}))))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"verify-that-its-working"},"Verify that it\u2019s Working"),(0,i.kt)("h3",{id:"method-1-using-the-frontend"},"Method 1: Using the Frontend"),(0,i.kt)("h2",{id:"using-the-frontend-airplane-tracker-visualization"},"Using the Frontend Airplane Tracker Visualization"),(0,i.kt)("p",null,"TODO - link to frontend"),(0,i.kt)("h3",{id:"method-2-using-the-system-health-dashboard"},"Method 2: Using the System Health Dashboard"),(0,i.kt)("p",null,"TODO - link to dashboard"))}u.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/client_1-3f065bc8e2f845ac68291c4506e98748.png"},7193:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/client_2-cf55eee5520d86c97ffab75ff47b8be7.png"}}]);