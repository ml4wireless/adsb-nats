"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[7991],{5244:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"1.0.2","label":"1.0.2","banner":null,"badge":true,"noIndex":false,"className":"docs-version-1.0.2","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"Introduction","href":"/adsb-nats/","docId":"intro"},{"type":"link","label":"About the Project","href":"/adsb-nats/about","docId":"about"},{"type":"link","label":"Setup & Run Through (Local)","href":"/adsb-nats/local","docId":"local"},{"type":"category","label":"Replicate our Pipeline","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/adsb-nats/replicate/overview","docId":"replicate/overview"},{"type":"link","label":"NATS AWS Setup","href":"/adsb-nats/replicate/aws","docId":"replicate/aws"},{"type":"link","label":"Client","href":"/adsb-nats/replicate/client","docId":"replicate/client"},{"type":"link","label":"Annotator","href":"/adsb-nats/replicate/annotator","docId":"replicate/annotator"},{"type":"link","label":"Storage & Search Engine","href":"/adsb-nats/replicate/elastic","docId":"replicate/elastic"},{"type":"link","label":"Backend","href":"/adsb-nats/replicate/backend","docId":"replicate/backend"},{"type":"link","label":"Frontend","href":"/adsb-nats/replicate/frontend","docId":"replicate/frontend"},{"type":"link","label":"Dashboard","href":"/adsb-nats/replicate/dashboard","docId":"replicate/dashboard"},{"type":"link","label":"Stress Test","href":"/adsb-nats/replicate/stress_test","docId":"replicate/stress_test"}],"href":"/adsb-nats/category/replicate-our-pipeline"},{"type":"link","label":"Documentation Website","href":"/adsb-nats/doc_tutorial","docId":"doc_tutorial"}]},"docs":{"about":{"id":"about","title":"About the Project","description":"This document contains a project brief, image of a physical model, and a link to our paper for additional context that may be useful.","sidebar":"defaultSidebar"},"doc_tutorial":{"id":"doc_tutorial","title":"Documentation Website","description":"Docs for Docs","sidebar":"defaultSidebar"},"intro":{"id":"intro","title":"Introduction","description":"By: Victor Li, Zhen Jiang, Shruti Satrawada, Sivani Voruganti, Gen Yang","sidebar":"defaultSidebar"},"local":{"id":"local","title":"Setup & Run Through (Local)","description":"This quick tutorial guides you through connecting a Software Defined Radio to your laptop, reading in Airplane Data, unpacking it, and outputting it to your console after cleaning and appending outside data information. We recommend doing this part before moving on to step 3.","sidebar":"defaultSidebar"},"replicate/annotator":{"id":"replicate/annotator","title":"Annotator","description":"The Annotator is a module within our data pipeline that is responsible for enriching the processed radio data with additional meaningful information. For our application, we downloaded data from the FAA\u2019s (Federal Aviation Administration) Releasable Aircraft Database and used it to add additional information to each packet.","sidebar":"defaultSidebar"},"replicate/aws":{"id":"replicate/aws","title":"NATS AWS Setup","description":"\ud83d\udca1 In the AWS Setup Section, you will be guided through creating a new EKS Cluster, connecting to it, starting a NATS Server, connecting to it, and finally creating a Network Load Balancer.","sidebar":"defaultSidebar"},"replicate/backend":{"id":"replicate/backend","title":"Backend","description":"Overview","sidebar":"defaultSidebar"},"replicate/client":{"id":"replicate/client","title":"Client","description":"Now that we have the backbone of the pipeline set up it is ready to start accepting data. Set up the Client program component in the pipeline, which is responsible for reading raw spectrum data packets from a radio device, and unpacking/processing them into a more human-readable format. The client program is highly customizable to your own application. In the case of our airplane tracker application, it specifically processes ADS-B packets using the dump1090 software which decodes the data into a more human-readable format, in this case a JSON file.","sidebar":"defaultSidebar"},"replicate/dashboard":{"id":"replicate/dashboard","title":"Dashboard","description":"1. Check Out Our Dashboard for the Airplane Tracker Example","sidebar":"defaultSidebar"},"replicate/elastic":{"id":"replicate/elastic","title":"Storage & Search Engine","description":"ElasticSearch (ES) is a distributed search and analytics engine that provides database-like functionality to store, search, and/or analyze real-time data. This is a core component in our pipeline that comes sequentially after the Annotator. It consumes all the annotated data from the pipeline and serves multiple purposes\u2013including monitoring the Client status, storing the data, and finally serving as a persistent database to the backend flask server.","sidebar":"defaultSidebar"},"replicate/frontend":{"id":"replicate/frontend","title":"Frontend","description":"Introduction","sidebar":"defaultSidebar"},"replicate/overview":{"id":"replicate/overview","title":"Overview","description":"1. Set up the AWS Environment","sidebar":"defaultSidebar"},"replicate/stress_test":{"id":"replicate/stress_test","title":"Stress Test","description":"This page will show you how to stress test our data pipeline","sidebar":"defaultSidebar"}}}')}}]);