"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5579],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=u(n),d=i,c=k["".concat(p,".").concat(d)]||k[d]||m[d]||l;return n?a.createElement(c,r(r({ref:t},s),{},{components:n})):a.createElement(c,r({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var u=2;u<l;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8958:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const l={sidebar_position:20},r="Setup & Run Through (Local)",o={unversionedId:"local",id:"version-1.0.1/local",title:"Setup & Run Through (Local)",description:"SDR Setup",source:"@site/versioned_docs/version-1.0.1/local.md",sourceDirName:".",slug:"/local",permalink:"/adsb-nats/local",draft:!1,tags:[],version:"1.0.1",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"defaultSidebar",previous:{title:"About the Project",permalink:"/adsb-nats/about"},next:{title:"Replicate our Pipeline",permalink:"/adsb-nats/category/replicate-our-pipeline"}},p={},u=[{value:"SDR Setup",id:"sdr-setup",level:2},{value:"K8S Setup",id:"k8s-setup",level:2},{value:"First Time",id:"first-time",level:3},{value:"Everytime",id:"everytime",level:3},{value:"NATS Setup",id:"nats-setup",level:2},{value:"First Time",id:"first-time-1",level:3},{value:"Run the server program",id:"run-the-server-program",level:2},{value:"Dump1090",id:"dump1090",level:2},{value:"first time (installation, etc.)",id:"first-time-installation-etc",level:2},{value:"for linux (ubuntu 18.04)",id:"for-linux-ubuntu-1804",level:3},{value:"run the program",id:"run-the-program",level:2},{value:"Run the client program",id:"run-the-client-program",level:2},{value:"First Time",id:"first-time-2",level:3},{value:"Everytime",id:"everytime-1",level:3},{value:"Run the annotator program",id:"run-the-annotator-program",level:2},{value:"First Time",id:"first-time-3",level:3},{value:"Everytime",id:"everytime-2",level:3},{value:"Extras &amp; Cleanup",id:"extras--cleanup",level:2},{value:"Misc Notes &amp; Clarifications",id:"misc-notes--clarifications",level:2},{value:"Environment Setup with Ubuntu 18.04",id:"environment-setup-with-ubuntu-1804",level:2}],s={toc:u};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"setup--run-through-local"},"Setup & Run Through (Local)"),(0,i.kt)("h2",{id:"sdr-setup"},"SDR Setup"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=uM8NkB2nIis"},"https://www.youtube.com/watch?v=uM8NkB2nIis")),(0,i.kt)("p",null,"hardware setup"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=bT2WZhKBkRk"},"https://www.youtube.com/watch?v=bT2WZhKBkRk")),(0,i.kt)("p",null,"software setup"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Software Setup video contains link to download CubicSDR software")),(0,i.kt)("h2",{id:"k8s-setup"},"K8S Setup"),(0,i.kt)("h3",{id:"first-time"},"First Time"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"install docker desktop"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"brew install minikube")," (and/or enable kubernetes in docker desktop settings)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"brew install helm")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"helm repo add nats [https://nats-io.github.io/k8s/helm/charts/](https://nats-io.github.io/k8s/helm/charts/)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"help repo list"))))),(0,i.kt)("h3",{id:"everytime"},"Everytime"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Open Docker"),(0,i.kt)("li",{parentName:"ul"},"in action column for mykube press play")),(0,i.kt)("h2",{id:"nats-setup"},"NATS Setup"),(0,i.kt)("h3",{id:"first-time-1"},"First Time"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"(from ",(0,i.kt)("a",{parentName:"em",href:"https://docs.nats.io/nats-concepts/what-is-nats/walkthrough_setup"},"https://docs.nats.io/nats-concepts/what-is-nats/walkthrough_setup"),")")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"brew tap nats-io/nats-tools")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"brew install nats-io/nats-tools/nats")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"brew install nats-server"))),(0,i.kt)("h2",{id:"run-the-server-program"},"Run the server program"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In adsb-nats-master, go to terminal and run the following:"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minikube start --memory 8192 --cpus 3 --profile mykube"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"note: may need to increase memory allocated in docker desktop to match above"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minikube profile mykube"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"set minikube (default?) profile to be the custom \u2018mykube\u2019 profile we just created"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"export TOKEN=<your token>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cd server")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"./k8s-minikube-startup.sh"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python"},"### output ###\nInstalling helm chart...\nNAME: plane-nats\nLAST DEPLOYED: Mon Sep 26 19:34:37 2022\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nNOTES:\nYou can find more information about running NATS on Kubernetes\nin the NATS documentation website:\n\n  https://docs.nats.io/nats-on-kubernetes/nats-kubernetes\n\nNATS Box has been deployed into your cluster, you can\nnow use the NATS tools within the container as follows:\n\n  kubectl exec -n default -it deployment/plane-nats-box -- /bin/sh -l\n\n  nats-box:~# nats-sub test &\n  nats-box:~# nats-pub test hi\n  nats-box:~# nc plane-nats 4222\n\nThanks for using NATS!\nWaiting 90s for background startup tasks...\nExposing server node as service...\nservice/plane-nats-ext created\nNAME             APP_PORT   HOST_PORT\nplane-nats-ext   4222       30303\n\nClient Connection URL\n        nats://$TOKEN@docker-desktop:30303\nExposing minikube internal service to host machine. Leave this command running.\nhttp://127.0.0.1:58973\n\u2757 Because you are using a Docker driver on darwin, the terminal needs to be open to run it.\n")),"  (l",(0,i.kt)("em",{parentName:"li"},"eave this terminal tab running ^ )"))),(0,i.kt)("h2",{id:"dump1090"},"Dump1090"),(0,i.kt)("h2",{id:"first-time-installation-etc"},"first time (installation, etc.)"),(0,i.kt)("p",null,"steps to install dump1090:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Download from dump1090 from\xa0",(0,i.kt)("a",{parentName:"li",href:"https://github.com/antirez/dump1090"},"https://github.com/antirez/dump1090")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"brew install pkg-config")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"brew install librtlsdr")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"brew install"),"  "),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"make")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"make LIBRARY_PATH=/usr/local/lib")," (if make doesn\u2019t work)",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"if those don\u2019t work and you get a lusb error try the below: (may need to point to library location of lusb/libusb)"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"cc -g -o dump1090 dump1090.o anet.o -L/opt/homebrew/Cellar/librtlsdr/0.6.0/lib")," -L/opt/homebrew/Cellar/libusb/1.0.26/lib ",(0,i.kt)("inlineCode",{parentName:"p"},"-lrtlsdr -lusb-1.0 -lpthread -lm"))))),(0,i.kt)("li",{parentName:"ol"},"Copy it to ",(0,i.kt)("inlineCode",{parentName:"li"},"/usr/local/bin")," (",(0,i.kt)("inlineCode",{parentName:"li"},"sudo cp dump1090 /usr/local/bin"),")"),(0,i.kt)("li",{parentName:"ol"},"to check: run ",(0,i.kt)("inlineCode",{parentName:"li"},"/usr/local/bin/dump1090")," & make sure it returns data")),(0,i.kt)("h3",{id:"for-linux-ubuntu-1804"},"for linux (ubuntu 18.04)"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Download from dump1090 from\xa0",(0,i.kt)("a",{parentName:"li",href:"https://github.com/antirez/dump1090"},"https://github.com/antirez/dump1090")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"sudo apt-get install pkg-config")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"sudo apt-get install librtlsdr-dev")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"make"))),(0,i.kt)("h2",{id:"run-the-program"},"run the program"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/usr/local/bin/dump1090")),(0,i.kt)("li",{parentName:"ul"},"can pipe to an output file and run ",(0,i.kt)("a",{parentName:"li",href:"http://client.py"},"client.py")," with that, ex:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/usr/local/bin/dump1090")," > live_dump1090.txt"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"python client -f live_dump1090.txt"))))),(0,i.kt)("h2",{id:"run-the-client-program"},"Run the client program"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"(in another terminal window)")),(0,i.kt)("h3",{id:"first-time-2"},"First Time"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pip install -r requirements.txt")," - first time only")),(0,i.kt)("h3",{id:"everytime-1"},"Everytime"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"export TOKEN=<your token>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'export NATS_HOST="127.0.0.1:58973"'),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"127.0.0.1:58973 comes from the output ^ after running ",(0,i.kt)("inlineCode",{parentName:"li"},"./k8s-minikube-startup.sh")," in the previous step"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"python3 client.py [-f PLAYBACKFILE]"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"if using pre-recorded: ",(0,i.kt)("inlineCode",{parentName:"li"},"python3 client.py -f client-rtl/dump1090_recording.txt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"python3 client.py -f dump1090_recording.txt"))))),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"(leave this running)")),(0,i.kt)("h2",{id:"run-the-annotator-program"},"Run the annotator program"),(0,i.kt)("h3",{id:"first-time-3"},"First Time"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"download")," plane data from ",(0,i.kt)("a",{parentName:"li",href:"https://www.faa.gov/licenses_certificates/aircraft_certification/aircraft_registry/releasable_aircraft_download"},"this link")," and unzip the folder"),(0,i.kt)("li",{parentName:"ul"},"Put everything inside the downloaded ReleasableAircraft folder into the aircraft-annotator directory in adsb-nats-master. (Do not put the entire ReleasableAircraft folder in - just everything inside it)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cd aircraft-annotator")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"run")," ",(0,i.kt)("inlineCode",{parentName:"li"},"./cleanup-data.sh"))),(0,i.kt)("h3",{id:"everytime-2"},"Everytime"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"(In new terminal)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"instructions here are pretty similar to the readme in aircraft-annotator directory"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"export TOKEN=<your token>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'export NATS_HOST="127.0.0.1:58973"'),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"where 127.0.0.1:58973 comes from the output after running ",(0,i.kt)("inlineCode",{parentName:"li"},"./k8s-minikube-startup.sh")," in the previous step"))),(0,i.kt)("li",{parentName:"ul"},"run program with ",(0,i.kt)("inlineCode",{parentName:"li"},"python3 aircraft-annotator/annotator.py")," (from adsb-nats directory, or anywhere outside aircraft-annotator directory)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"or ",(0,i.kt)("inlineCode",{parentName:"li"},"cd aircraft-annotator")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"python3 [annotator.p](http://annotator.py)y .")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"(leave this running)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"(in another terminal)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Verify annotations are correct with ",(0,i.kt)("inlineCode",{parentName:"li"},'nats -s nats://$TOKEN@$NATS_HOST sub "plane.>"'))))),(0,i.kt)("h2",{id:"extras--cleanup"},"Extras & Cleanup"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"see pods with ",(0,i.kt)("inlineCode",{parentName:"li"},"kubectl get pods -A")),(0,i.kt)("li",{parentName:"ul"},"Clean Up",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"if necessary, switch k8s context (from aws back to minikube) \u2014 ",(0,i.kt)("inlineCode",{parentName:"li"},"kubectl config use-context mykube"),"  minikube or mykube"),(0,i.kt)("li",{parentName:"ul"},"in ",(0,i.kt)("inlineCode",{parentName:"li"},"server")," directory, do ",(0,i.kt)("inlineCode",{parentName:"li"},"./cleanup-k8s.sh")),(0,i.kt)("li",{parentName:"ul"},"stop docker"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("del",{parentName:"li"},"in case you need to stop containers \u2014 ",(0,i.kt)("inlineCode",{parentName:"del"},"docker stop $(docker ps -a -q)")," (stops ALL presently running containers)"))))),(0,i.kt)("h2",{id:"misc-notes--clarifications"},"Misc Notes & Clarifications"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"note: ",(0,i.kt)("inlineCode",{parentName:"li"},"config-cluster.json")," is only for running not thru k8s"),(0,i.kt)("li",{parentName:"ul"},"messages passed to NATS is in JSON format with binary"),(0,i.kt)("li",{parentName:"ul"},"dump1090")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"environment-setup-with-ubuntu-1804"},"Environment Setup with Ubuntu 18.04"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"install snap",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sudo apt-get install snapd")))),(0,i.kt)("li",{parentName:"ul"},"install helm",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://helm.sh/docs/intro/install/"},"https://helm.sh/docs/intro/install/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sudo snap install helm --classic")))),(0,i.kt)("li",{parentName:"ul"},"install docker",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"latest version installation ",(0,i.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/ubuntu/"},"https://docs.docker.com/engine/install/ubuntu/")),(0,i.kt)("li",{parentName:"ul"},"manage docker as a non-root user ",(0,i.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"},"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user")))),(0,i.kt)("li",{parentName:"ul"},"install minikube")))}m.isMDXComponent=!0}}]);